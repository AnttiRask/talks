---
title: "Improving `sparklyr` testing"
author: "Edgar Ruiz"
format: 
  revealjs:
    theme: default
    smaller: true
    transition: fade
    background-transition: fade
editor: visual
execute: 
  eval: true
  echo: false
---

## R Package testing ðŸ“¦

```{r}
ver_testthat <- "Provides functions to create, track and report test results"
ver_gh <- "GitHub can run the **exact same** tests when we submit changes to the package"
ver_covr <- "Calculates how many lines of our code was actually tested (coverage)"
ver_main <- "Part of package development discipline. It ensures quality of the package"
```


`r ver_main`

::: columns
::: {.column width="70%"}

:::
::: {.column width="30%"}
ðŸ“¦

      â”œâ”€â”€ .github/
        â””â”€â”€ workflows/
          â””â”€â”€ tests.yml
      â”œâ”€â”€ codecov.yml
      â”œâ”€â”€ R
        â””â”€â”€ my-script.R
      â”œâ”€â”€ man/
      â””â”€â”€ tests/
        â”œâ”€â”€ testthat.R.        
        â””â”€â”€ testthat/          
          â”œâ”€â”€ test-my-script.R 
          â”œâ”€â”€ helper-init.R    
          â””â”€â”€ setup.R          
:::
:::

## R Package testing ðŸ“¦

`r ver_main`

::: columns
::: {.column width="70%"}
-   ![](images/testthat.png){width="50"} `r ver_testthat`
:::
::: {.column width="30%"}
ðŸ“¦


      â”œâ”€â”€ .github/
        â””â”€â”€ workflows/
          â””â”€â”€ tests.yml
      â”œâ”€â”€ codecov.yml
      â”œâ”€â”€ R
        â””â”€â”€ my-script.R
      â”œâ”€â”€ man/
      â””â”€â”€ tests/
        â”œâ”€â”€ testthat.R.         *
        â””â”€â”€ testthat/           *
          â”œâ”€â”€ test-my-script.R  *
          â”œâ”€â”€ helper-init.R     *
          â””â”€â”€ setup.R           *
:::
:::

## R Package testing ðŸ“¦

`r ver_main`

::: columns
::: {.column width="70%"}
-   ![](images/testthat.png){width="50"} `r ver_testthat`
-   ![](images/github-mark.png){width="50"} `r ver_gh`
:::
::: {.column width="30%"}
ðŸ“¦

      â”œâ”€â”€ .github/              *
        â””â”€â”€ workflows/          *
          â””â”€â”€ tests.yml         *
      â”œâ”€â”€ codecov.yml
      â”œâ”€â”€ R
        â””â”€â”€ my-script.R
      â”œâ”€â”€ man/
      â””â”€â”€ tests/
        â”œâ”€â”€ testthat.R.        
        â””â”€â”€ testthat/          
          â”œâ”€â”€ test-my-script.R 
          â”œâ”€â”€ helper-init.R    
          â””â”€â”€ setup.R        
:::
:::

## R Package testing ðŸ“¦

`r ver_main`

::: columns
::: {.column width="70%"}
-   ![](images/testthat.png){width="50"} `r ver_testthat`
-   ![](images/github-mark.png){width="50"} `r ver_gh`
-   ![](images/covr.png){width="50"} `r ver_covr`
:::
::: {.column width="30%"}
ðŸ“¦

      â”œâ”€â”€ .github/             
        â””â”€â”€ workflows/         
          â””â”€â”€ tests.yml        
      â”œâ”€â”€ codecov.yml           *
      â”œâ”€â”€ R
        â””â”€â”€ my-script.R
      â”œâ”€â”€ man/
      â””â”€â”€ tests/
        â”œâ”€â”€ testthat.R.        
        â””â”€â”€ testthat/          
          â”œâ”€â”€ test-my-script.R 
          â”œâ”€â”€ helper-init.R    
          â””â”€â”€ setup.R        
:::
:::


## R Package testing ðŸ“¦

`r ver_main`

::: columns
::: {.column width="70%"}
-   ![](images/testthat.png){width="50"} `r ver_testthat`
-   ![](images/github-mark.png){width="50"} `r ver_gh`
-   ![](images/covr.png){width="50"} `r ver_covr`
:::
::: {.column width="30%"}
ðŸ“¦

      â”œâ”€â”€ .github/             
        â””â”€â”€ workflows/         
          â””â”€â”€ tests.yml        
      â”œâ”€â”€ codecov.yml           
      â”œâ”€â”€ R
        â””â”€â”€ my-script.R
      â”œâ”€â”€ man/
      â””â”€â”€ tests/
        â”œâ”€â”€ testthat.R.        
        â””â”€â”€ testthat/          
          â”œâ”€â”€ test-my-script.R 
          â”œâ”€â”€ helper-init.R    
          â””â”€â”€ setup.R        
:::
:::

<br/>

#### >>>>> Thousands of R packages in CRAN use a combination of these three!! <<<<<

## ![](images/testthat.png){width="70"} ![](images/covr.png){width="70"} ![](images/devtools.svg){width="70"}  

All of these commands depend on `testthat` being properly setup:

- `testthat::test()`
- `devtools::test_check()`
- `devtools::test(filter = "dplyr")` *(Runs only `testthat` scripts containing the word "dplyr")*
- `covr::code_coverage()`

:::{.fragment}
Adds **testthat** sub folder to the **test/** folder. Also a **testthat.R** file that activates the tests.
:::

## Problem # 1 - `testthat.R`

::: columns
::: {.column width="40%"}
#### `dplyr`

``` r
library(testthat)
library(dplyr)

test_check("dplyr")
```
:::

::: {.column width="60%"}
#### `sparklyr`

::: fragment

{{< include testthat.qmd >}}

:::
:::
:::

## Problem # 1 - `testthat.R`

::: columns
::: {.column width="40%"}
#### What it does (extra)

-   Setup some environment options
-   Custom Reporter
-   Filters for which tests 
-   Tears down the Spark session after completion
-   Iterates through the tests
:::

::: {.column width="60%"}
#### `sparklyr`

{{< include testthat.qmd >}}

:::
:::

